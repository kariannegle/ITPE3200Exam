{"ast":null,"code":"var _jsxFileName = \"/Users/amiinahmed/Desktop/Github/ITPE3200ExamSub2/snapnote-frontend/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Home.jsx\nimport React, { useState } from 'react';\nimport CreatePost from '../components/CreatePost';\nimport PostFeed from '../components/PostFeed';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth(); // Get authentication status\n\n  const [posts, setPosts] = useState([]);\n\n  // Handler for when a new post is created\n  const handlePostCreated = newPost => {\n    setPosts([newPost, ...posts]);\n  };\n\n  // Handler for deleting a post\n  const handleDeletePost = postId => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this post?\");\n    if (confirmed) {\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n      console.log(`Post with ID ${postId} has been deleted.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [isAuthenticated ? /*#__PURE__*/_jsxDEV(CreatePost, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this), \" to create a post.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostFeed, {\n      posts: posts,\n      onDelete: handleDeletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"IZlydlSwS1FCIVhGvpUoFICLZug=\", false, function () {\n  return [useAuth];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","CreatePost","PostFeed","useAuth","jsxDEV","_jsxDEV","Home","_s","isAuthenticated","posts","setPosts","handlePostCreated","newPost","handleDeletePost","postId","confirmed","window","confirm","prevPosts","filter","post","id","console","log","className","children","onPostCreated","fileName","_jsxFileName","lineNumber","columnNumber","href","onDelete","_c","$RefreshReg$"],"sources":["/Users/amiinahmed/Desktop/Github/ITPE3200ExamSub2/snapnote-frontend/src/pages/Home.jsx"],"sourcesContent":["// src/pages/Home.jsx\nimport React, { useState } from 'react';\nimport CreatePost from '../components/CreatePost';\nimport PostFeed from '../components/PostFeed';\nimport { useAuth } from '../context/AuthContext';\n\nconst Home = () => {\n  const { isAuthenticated } = useAuth(); // Get authentication status\n\n  const [posts, setPosts] = useState([]);\n\n  // Handler for when a new post is created\n  const handlePostCreated = (newPost) => {\n    setPosts([newPost, ...posts]);\n  };\n\n  // Handler for deleting a post\n  const handleDeletePost = (postId) => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this post?\");\n    if (confirmed) {\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n      console.log(`Post with ID ${postId} has been deleted.`);\n    }\n  };\n\n  return (\n    <div className=\"home-page\">\n      {isAuthenticated ? (\n        <CreatePost onPostCreated={handlePostCreated} />\n      ) : (\n        <p>\n          Please <a href=\"/login\">log in</a> to create a post.\n        </p>\n      )}\n\n      {/* Post feed visible to everyone */}\n      <PostFeed posts={posts} onDelete={handleDeletePost} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAgB,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEvC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMW,iBAAiB,GAAIC,OAAO,IAAK;IACrCF,QAAQ,CAAC,CAACE,OAAO,EAAE,GAAGH,KAAK,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAIC,MAAM,IAAK;IACnC,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC;IAC9E,IAAIF,SAAS,EAAE;MACbL,QAAQ,CAACQ,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAAC,CAAC;MACnEQ,OAAO,CAACC,GAAG,CAAC,gBAAgBT,MAAM,oBAAoB,CAAC;IACzD;EACF,CAAC;EAED,oBACET,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBjB,eAAe,gBACdH,OAAA,CAACJ,UAAU;MAACyB,aAAa,EAAEf;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEhDzB,OAAA;MAAAoB,QAAA,GAAG,SACM,eAAApB,OAAA;QAAG0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,sBACpC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ,eAGDzB,OAAA,CAACH,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACuB,QAAQ,EAAEnB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjCID,IAAI;EAAA,QACoBH,OAAO;AAAA;AAAA8B,EAAA,GAD/B3B,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}