{"ast":null,"code":"var _jsxFileName = \"/Users/amiinahmed/Desktop/Github/ITPE3200ExamSub2/snapnote-frontend/src/components/CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  onPostCreated\n}) => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Create a new post object\n    const newPost = {\n      id: Date.now(),\n      // Temporary ID\n      content,\n      image,\n      author: \"Current User\",\n      // Replace with logged-in user details\n      date: new Date().toLocaleString()\n    };\n    // Callback to add the new post to the feed\n    onPostCreated(newPost);\n    // Clear inputs\n    setContent(\"\");\n    setImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: image ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image),\n            alt: \"Post Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"custom-file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImage(e.target.files[0]),\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), \"Upload Image\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"noteInput\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"What's on your mind?\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"postbutton\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"1zxXTztueL4BMNoWrO3gXDn2elA=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePost","onPostCreated","_s","content","setContent","image","setImage","handleSubmit","e","preventDefault","newPost","id","Date","now","author","date","toLocaleString","className","children","onSubmit","src","URL","createObjectURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","files","accept","value","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/amiinahmed/Desktop/Github/ITPE3200ExamSub2/snapnote-frontend/src/components/CreatePost.jsx"],"sourcesContent":["import React, { useState } from \"react\"\n\nconst CreatePost = ({ onPostCreated }) => {\n  const [content, setContent] = useState(\"\")\n  const [image, setImage] = useState(null)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // Create a new post object\n    const newPost = {\n      id: Date.now(), // Temporary ID\n      content,\n      image,\n      author: \"Current User\", // Replace with logged-in user details\n      date: new Date().toLocaleString(),\n    }\n    // Callback to add the new post to the feed\n    onPostCreated(newPost)\n    // Clear inputs\n    setContent(\"\")\n    setImage(null)\n  }\n\n  return (\n    <div className=\"create-post-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"left-column\">\n          {image ? (\n            <div className=\"image-placeholder\">\n              <img src={URL.createObjectURL(image)} alt=\"Post Preview\" />\n            </div>\n          ) : (\n            <label className=\"custom-file-upload\">\n              <input\n                type=\"file\"\n                onChange={(e) => setImage(e.target.files[0])}\n                accept=\"image/*\"\n              />\n              Upload Image\n            </label>\n          )}\n        </div>\n        <div className=\"right-column\">\n          <textarea\n            id=\"noteInput\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            placeholder=\"What's on your mind?\"\n            required\n          />\n          <button type=\"submit\" className=\"postbutton\">\n            Post\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default CreatePost\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}