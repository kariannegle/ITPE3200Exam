{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Post API calls\nexport const fetchPosts = async () => {\n  const response = await axios.get(`${API_URL}/post`);\n  return response.data;\n};\nexport const fetchPostById = async id => {\n  const response = await axios.get(`${API_URL}/post/${id}`);\n  return response.data;\n};\nexport const createPost = async post => {\n  const response = await axios.post(`${API_URL}/post`, post);\n  return response.data;\n};\nexport const updatePost = async (id, post) => {\n  const response = await axios.put(`${API_URL}/post/${id}`, post);\n  return response.data;\n};\nexport const deletePost = async id => {\n  const response = await axios.delete(`${API_URL}/post/${id}`);\n  return response.data;\n};\nexport const fetchCommentsByPostId = async postId => {\n  const response = await axios.get(`${API_URL}/comment/byPost/${postId}`);\n  return response.data;\n};\nexport const createComment = async comment => {\n  const response = await axios.post(`${API_URL}/comment`, comment);\n  return response.data;\n};\nexport const deleteComment = async id => {\n  const response = await axios.delete(`${API_URL}/comment/${id}`);\n  return response.data;\n};\n\n// Account API calls\nexport const register = async registerData => {\n  const response = await axios.post(`${API_URL}/account/register`, registerData);\n  return response.data;\n};\nexport const login = async loginData => {\n  const response = await axios.post(`${API_URL}/account/login`, loginData);\n  return response.data;\n};\nexport const logout = async () => {\n  const response = await axios.post(`${API_URL}/account/logout`);\n  return response.data;\n};\n\n// User API calls\nexport const getUserProfile = async userId => {\n  const response = await axios.get(`${API_URL}/user/profile`, {\n    params: {\n      userId\n    }\n  });\n  return response.data;\n};\nexport const updateUserSettings = async settingsData => {\n  const response = await axios.post(`${API_URL}/user/settings`, settingsData);\n  return response.data;\n};\n\n// Friend API calls\nexport const getFriends = async () => {\n  const response = await axios.get(`${API_URL}/friend`);\n  return response.data;\n};\nexport const searchUsers = async searchTerm => {\n  const response = await axios.post(`${API_URL}/friend/searchUsers`, {\n    searchTerm\n  });\n  return response.data;\n};\nexport const addFriend = async friendId => {\n  const response = await axios.post(`${API_URL}/friend/addFriend`, {\n    friendId\n  });\n  return response.data;\n};\nexport const deleteFriend = async friendId => {\n  const response = await axios.post(`${API_URL}/friend/deleteFriend`, {\n    friendId\n  });\n  return response.data;\n};\n\n// Error handling\nexport const getError = async () => {\n  const response = await axios.get(`${API_URL}/error`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","fetchPosts","response","get","data","fetchPostById","id","createPost","post","updatePost","put","deletePost","delete","fetchCommentsByPostId","postId","createComment","comment","deleteComment","register","registerData","login","loginData","logout","getUserProfile","userId","params","updateUserSettings","settingsData","getFriends","searchUsers","searchTerm","addFriend","friendId","deleteFriend","getError"],"sources":["/Users/amiinahmed/Desktop/Github/ITPE3200ExamSub2/snapnote-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Post API calls\nexport const fetchPosts = async () => {\n    const response = await axios.get(`${API_URL}/post`);\n    return response.data;\n};\n\nexport const fetchPostById = async (id) => {\n    const response = await axios.get(`${API_URL}/post/${id}`);\n    return response.data;\n};\n\nexport const createPost = async (post) => {\n    const response = await axios.post(`${API_URL}/post`, post);\n    return response.data;\n};\n\nexport const updatePost = async (id, post) => {\n    const response = await axios.put(`${API_URL}/post/${id}`, post);\n    return response.data;\n};\n\nexport const deletePost = async (id) => {\n    const response = await axios.delete(`${API_URL}/post/${id}`);\n    return response.data;\n};\n\nexport const fetchCommentsByPostId = async (postId) => {\n    const response = await axios.get(`${API_URL}/comment/byPost/${postId}`);\n    return response.data;\n};\n\nexport const createComment = async (comment) => {\n    const response = await axios.post(`${API_URL}/comment`, comment);\n    return response.data;\n};\n\nexport const deleteComment = async (id) => {\n    const response = await axios.delete(`${API_URL}/comment/${id}`);\n    return response.data;\n};\n\n// Account API calls\nexport const register = async (registerData) => {\n    const response = await axios.post(`${API_URL}/account/register`, registerData);\n    return response.data;\n};\n\nexport const login = async (loginData) => {\n    const response = await axios.post(`${API_URL}/account/login`, loginData);\n    return response.data;\n};\n\nexport const logout = async () => {\n    const response = await axios.post(`${API_URL}/account/logout`);\n    return response.data;\n};\n\n// User API calls\nexport const getUserProfile = async (userId) => {\n    const response = await axios.get(`${API_URL}/user/profile`, { params: { userId } });\n    return response.data;\n};\n\nexport const updateUserSettings = async (settingsData) => {\n    const response = await axios.post(`${API_URL}/user/settings`, settingsData);\n    return response.data;\n};\n\n// Friend API calls\nexport const getFriends = async () => {\n    const response = await axios.get(`${API_URL}/friend`);\n    return response.data;\n};\n\nexport const searchUsers = async (searchTerm) => {\n    const response = await axios.post(`${API_URL}/friend/searchUsers`, { searchTerm });\n    return response.data;\n};\n\nexport const addFriend = async (friendId) => {\n    const response = await axios.post(`${API_URL}/friend/addFriend`, { friendId });\n    return response.data;\n};\n\nexport const deleteFriend = async (friendId) => {\n    const response = await axios.post(`${API_URL}/friend/deleteFriend`, { friendId });\n    return response.data;\n};\n\n// Error handling\nexport const getError = async () => {\n    const response = await axios.get(`${API_URL}/error`);\n    return response.data;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}